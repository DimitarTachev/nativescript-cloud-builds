fastlane_version '2.140.0'

def underscore (string)
  return string.gsub(/::/, '/').
  gsub(/([A-Z]+)([A-Z][a-z])/,'\1_\2').
  gsub(/([a-z\d])([A-Z])/,'\1_\2').
  tr("-", "_").
  upcase
end

def getCLIArgEnvName (argName)
  return "CLI_ARG_" + underscore(argName) + "_{{CLI_BUILD_ID}}";
end

platform :android do
  desc 'Build the Android application.'
  lane :build do

    nativescriptCLICommand = ["tns", "build", "android", "--copy-to", "{{OUTPUT_DIR}}/app.apk"];
    if ENV[getCLIArgEnvName("release")]
      nativescriptCLICommand.push("--release");
    end

    logEnvVar = getCLIArgEnvName("log");
    if ENV[logEnvVar]
      nativescriptCLICommand.push("--log", "\"$#{logEnvVar}\"");
    end

    # TODO: reuse for cache skipping?
    if ENV[getCLIArgEnvName("clean")]
      nativescriptCLICommand.push("--clean");
    end

    if ENV[getCLIArgEnvName("key-store")]
      keyStoreContent = Base64.decode64(ENV[getCLIArgEnvName("key-store")]);
      keyStoreFilePath = File.join(File.expand_path("{{PROJECT_DIR}}"), "__envKeystore");
      keyStoreDirPath = File.dirname(keyStoreFilePath)
      unless File.directory?(keyStoreDirPath)
        FileUtils.mkdir_p(keyStoreDirPath)
      end
      File.open(keyStoreFilePath, "wb") do |f|
        f.write(keyStoreContent)
      end
      nativescriptCLICommand.push("--key-store-path", keyStoreFilePath);
    end

    keyStorePassEnvVar = getCLIArgEnvName("key-store-password");
    if ENV[keyStorePassEnvVar]
      nativescriptCLICommand.push("--key-store-password", "\"$#{keyStorePassEnvVar}\"");
    end

    keyStoreAliasEnvVar = getCLIArgEnvName("key-store-alias");
    if ENV[keyStoreAliasEnvVar]
      nativescriptCLICommand.push("--key-store-alias", "\"$#{keyStoreAliasEnvVar}\"");
    end

    keyStoreAliasPassEnvVar = getCLIArgEnvName("key-store-alias-password");
    if ENV[keyStoreAliasPassEnvVar]
      nativescriptCLICommand.push("--key-store-alias-password", "\"$#{keyStoreAliasPassEnvVar}\"");
    end

    sh(nativescriptCLICommand);
  end
 
 end